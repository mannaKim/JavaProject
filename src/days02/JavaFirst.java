//package는 폴더와 같은 의미로 사용해도 무방합니다.
package days02;

// <주석문>
// 현재 파일에 쓰여진 모든 언어들은 프로그램 실행에 관여하는 예약어(실행명령 등)입니다.
// 다만 "//"로 시작하거나, "/* */" 사이에 있는 구문들은 실행되지 않고, 개발자 및 다른 사람의
// 이해를 돕기 위한 설명문으로 사용되며, '주석문'이라고 부릅니다.
// 컴파일러는 주석문을 제외한 다른 명령어들만 컴파일 & 실행합니다.

/*한줄에 명령어와 주석문을 같이 사용한다면 명령어를 쓰고, 뒤에 주석문을 씁니다.
한줄에서 시작한 주석문은 그 뒤로 모두가 주석으로 인식되어 명령을 써도 실행되지 않습니다.*/

// 한 줄 주석 : '//'
// 여러 줄 주석 : '/* 내용 */'

// 자바 프로그램의 시작 - 자바 프로그램은 클래스 단위로 구성되고 실행됩니다.
public class JavaFirst {	// 클래스이름 '{'로 시작해서 '}'로 구성됩니다.

	// 구성은 class단위로 구성되지만, 실행의 시작과 끝은 main이 담당합니다.
	// class 안에는 main외에 다른 구성요소들이 들어와서 쓰일 수 있습니다.
	public static void main(String[] args) { 	// JavaFirst프로그램 실행의 시작
		
		System.out.println("겁나 쉬운 자바 프로그래밍~!!"); // 콘솔창에 출력(cmd에 프린트는 다른 방법~!)
		// 괄호 안의 큰따옴표로 둘러 싸인 텍스트를(문자열) 화면에 출력하는 명령입니다.
		// 자바 명령은 하나의 명령이 끝날때마다 반드시 ';'을 표시하여 문장의 끝을 알려줍니다.
		System.out.printf("겁나 쉬운 자바 프로그래밍~!!\n");
		System.out.printf("겁나 쉬운 자바 프로그래밍~!!");
		// println은 출력에 줄 바꿈 포함
		// printf에서 줄바꿈을 포함하고 싶다면 문자열 내부에 '\n'을 포함
		
	} 	// JavaFirst프로그램 실행의 끝

}

// <클래스의 이름 생성 규칙>
// 첫 글자는 반드시 대문자이어야 합니다.
// 여러 단어가 조합된 이름이라면 두 번째 단어의 시작 문자도 대문자로 표기합니다.(카멜표기법)
// ex) JavaFirst, SecondProgram
// 하나의 Java 파일에는 여러개의 클래스가 정리될 수 있고, 그 중 하나는 반드시 public을 앞에 붙여서
// 현재 파일의 메인 클래스임을 표시합니다.
// 메인이 되는 클래스에 public static void main(String[] args){}을 포함시킵니다.

// 클래스의 이름은 영문과 숫자가 조합되어서 만들 수 있지만 역시 첫 글자는 영문이어야 합니다.
// 이름 중간에 공백 또는 특수기호를 쓸 수 없습니다.
// 사용가능한 특수기호로는 언더바(_) 하나 정도만 사용합니다. ex)Java_first
